<?php

//require_once('tcpdf/config/lang/eng.php');
//require_once('tcpdf/tcpdf.php'); 


// TO DO: change pid to cert; note people have been sent the old URL! 
$cert_id =sql_str_escape($_REQUEST['pid']);

$order_point = get_from_point_related_to_title($cert_id,'order.','has_certificate.');
if($order_point == null) {
  include("pages/bad_cert_id.php"); 
  exit();
} else {
  $name = $order_point['title'];
  $name = preg_replace('/[\s]+/', '_', $name);
  $name = preg_replace('/[^a-zA-Z0-9_]/', '', $name);
  $pdf_file_dir = 'certificates/' . $cert_id; 
  $pdf_file_loc = 
  //$pdf_file_dir . '/TheoryMine_' . $name . '.pdf'; 
  $pdf_file_dir . '/TheoryMine_' . $name . '.tex'; 
}

// if file doesn't exist, make dir
if(!file_exists($pdf_file_loc) 
   or ((file_exists($pdf_file_loc) and $_SESSION['userkind'] == 'admin'
      and $_REQUEST['fresh'] == "yes" ))) 
{
  if(is_dir($pdf_file_dir) or mkdir($pdf_file_dir)) { // if made directory successfully, make & save pdf
    $thm_point = get_point_related_from($order_point,'thm.','named.');
    //get_point_in_type($pid, 'thm.named.' );
    $thy_point = get_point_related_from($thm_point,"thy.","inthy.");
    $proof = get_point_related_to($thm_point,"proof.","proof.");
    
    $date = sqltimestamp_to_str($thm_point['time_stamp']);
    $thm_title= utf8_encode ( $thm_point['title']) ;
    $thm_body=  utf8_encode ($thm_point['body']);
    //$thm_body= utf8_encode ("try &alpha;");
    $proof_body = utf8_encode ("Proof outline: ". $proof['body']);
    $thy_title= utf8_encode ($thy_point['title']);
    $thy_body=  utf8_encode ($thy_point['body']);
    
    //preg_replace
   $thm_body2 = str_replace(
                array('<sub>', '</sub>'), 
                array('_{','}'),
                $thm_body
                
     )
    
    /*
    $thm_title=  'FLAMINIA THEOREM';
    $thm_body=  'a+b = b+a';
    $thy_title= 'Material World Theory';
    $thy_body=  'Set T = C1(Bool, Bool) | C2(T ); mw(C1(b1,b2),y) = y;  mw(C2(x),y) = C2(mw(x,y))';
    */
    
    //MAKE CERTIFICATE FROM TEMPLATE
        
    $template_tex_file = "certificates/certificate_template2.tex";
    $processed_tex_file = $id."processed.tex";
    
    $data = file_get_contents($template_tex_file);
    $data = str_replace(array(
                '*********THEOREM NAME*********',
                '*********THEORY*********',
                '*********THEOREM*********',
                '*********PROOF*********',
                '*********DATE*********'
                ), array(
                $thm_title,
                $thy_body,
                $thm_body,
                'Proof outline:'.$proof,
                $date
                ), $data
    );
    
    file_put_contents($pdf_file_loc, $data);
    
    
    system("/usr/local/texlive/2009/bin/universal-darwin/pdflatex -interaction nonstopmode -output-directory $pdf_file_dir -output-format pdf {$pdf_file_loc}");

    
    
    //$sf = fopen($pdf_file_loc, 'wb');
    //if (!$f) {
    // die_at_noted_problem('Unable to create output file: '.$pdf_file_loc);
   // }
    //fwrite($f, $contents, strlen($contents));
   // fclose($f);
  } 
  else {
    die_at_noted_problem("no dir and couldn't create the certificate dir"); 
  } 
}

/*
// File should have been created now, in which case we can send them the pdf...
if(file_exists($pdf_file_loc)) {
  if (ob_get_contents()) {
    die_at_noted_problem('Some data has already been output, can\'t send PDF file');
  }
  header('Content-Description: File Transfer');
  if (headers_sent()) {
    die_at_noted_problem('Some data has already been output to browser, can\'t send PDF file');
  }
  header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
  header('Pragma: public');
  header('Expires: Sat, 26 Jul 1997 05:00:00 GMT'); // Date in the past
  header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
  // force download dialog
  header('Content-Type: application/force-download');
  header('Content-Type: application/octet-stream', false);
  header('Content-Type: application/download', false);
  header('Content-Type: application/pdf', false);
  // use the Content-Disposition header to supply a recommended filename
  header('Content-Disposition: attachment; filename="'.basename($name).'";');
  header('Content-Transfer-Encoding: binary');
  
  $handle = fopen($pdf_file_loc, "r");
  if($handle == null) {
    die_at_noted_problem("Couldn't open certificate");
  }
  $contents = fread($handle, filesize($pdf_file_loc));
  fclose($handle);

  header('Content-Length: '.strlen($contents));
  echo $contents;
} else {
  die_at_noted_problem("No such pdf"); 
} */
?>
